// a.c------------------------------------------------------
#include<stdio.h>
typedef unsigned int ui;

int main(){
    ui v, c;
    for(scanf("%u", &v), c = 0; v; c++) v &= v - 1;
    printf("%u\n", c);
}

// b.c------------------------------------------------------
#include<stdio.h>
typedef unsigned int ui;

ui bits(ui n){
    ui c;
    for(c = 0; n; c++) n &= n - 1;
    return c;
}

int main(){
    ui a, b;
    scanf("%u %u", &a, &b);
    printf(
        (bits(a) < bits(b)) ? "-1\n" :
        (bits(a) > bits(b) ) ? "1\n": "0\n"        
    );
    
}

// c.c------------------------------------------------------
#include<stdio.h>
#include<limits.h>
typedef unsigned int ui;

int isPalinrome(ui n){
    ui reversed = 0, i = 0, original = n;
    for(; n; n >>= 1, i++){
        reversed <<= 1;
        reversed |= n & 1;
    }
    return reversed == original;
}

int main(){
    ui n;
    scanf("%u", &n);
    printf("%d", isPalinrome(n));
}


// d.c------------------------------------------------------
#include<stdio.h>
typedef unsigned int ui;

int invertBits(ui x, int p, int n){
    return x ^ ((1<<n)-1)<<p;
}

int main(){
    ui x;
    int p, n;
    scanf("%u %d %d", &x, &p, &n);
    printf( "%u", invertBits(x, p, n) );
}


// e.c------------------------------------------------------
#include<stdio.h>
#include<limits.h>
typedef unsigned int ui;

int nth(ui x, int n){ return (x >> n)&1; }

void printbits(ui n){
    int i = (CHAR_BIT * sizeof(n))-1;
    for(; i > -1 ; i--){
        printf("%d", nth(n, i));
    }
    printf("\n");
}

ui rotateL(ui x, int n){
    printbits(x << n);
    return (x << n) | ( x >> ((sizeof x * CHAR_BIT)-n) );
}

int main(){
    ui n1;
    int n2;
    scanf("%u %d", &n1, &n2);
    printf( "%u", rotateL(n1, n2) );
}


// f.c------------------------------------------------------
#include<stdio.h>
#include<limits.h>

#define bits(x) sizeof(x) * CHAR_BIT
typedef unsigned int ui;

ui rotateR(ui x, int n){
    return (x >> n) | (x<<(bits(x)-n));
}

int main(){
    ui n1;
    int n2;
    scanf("%u %d", &n1, &n2);
    printf( "%u", rotateR(n1, n2) );
}


// g.c------------------------------------------------------
#include<stdio.h>
#include<limits.h>

#define bits(x) sizeof(x) * CHAR_BIT
typedef unsigned int ui;

ui swap(ui x, int i, int j){
    return x;
}

int main(){
    ui n1;
    int n2, n3;
    scanf("%u %d %d", &n1, &n2, &n3);
    printf( "%u", swap(n1, n2, n3));
}


// i.c------------------------------------------------------
#include<stdio.h>
#include<limits.h>
typedef unsigned int ui;
#define b(x) sizeof(x) * CHAR_BIT

ui get(ui x, int n){ return (x>>n) & 1; }

ui set(ui x, int n, int value){ return (x & ~(1<<n)) | ((value<<n)); }

void swap(ui *x, int i, int j){
    int ith = get(*x, i);
    int jth = get(*x, j);
    int tmp = set(*x, i, jth);
    *x = set(tmp, j, ith);
}

int main(){
    ui n;
    int i, j, ith;
    scanf("%u %d %d", &n, &i, &j);
    swap(&n, i, j);
    printf("%u", n);
}


// j.c------------------------------------------------------
#include<stdio.h>
#include<limits.h>
typedef unsigned int ui;
#define b(x) sizeof(x) * CHAR_BIT

ui get(ui x, int n){
    return (x>>n) & 1;
}

ui set(ui x, int n, int value){     
    return (x & ~(1<<n)) | ((value<<n));
}

void swap(ui *x, int i, int j){
    int ith = get(*x, i);
    int jth = get(*x, j);
    int tmp = set(*x, i, jth);
    *x = set(tmp, j, ith);
}

int main(){
    ui n;
    int a, b;
    scanf("%u %d %d", &n, &a, &b);
    int i = 0;
    for(; i <= (b-a)/2; i++) swap(&n, a+i, b-i);
    printf("%u", n);
}


// util.c------------------------------------------------------
typedef unsigned int ui;

int nth(ui x, int n){ return (x >> n)&1; }

void printbits(ui n){
    int i = (CHAR_BIT * sizeof(n))-1;
    for(; i > -1 ; i--){
        printf("%d", nth(n, i));
    }
    printf("\n");
}

ui bits(ui n){
    ui c;
    for(c = 0; n; c++) n &= n - 1;
    return c;
}

